{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nasync function serviceCardsInfo(data, page) {\n  const BACE_URL = 'https://pixabay.com/api/';\n  const API_KEY = '42892988-1a177f86546a7a1e93a2f736f';\n\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: data,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n    page: page,\n    per_page: 40,\n  });\n\n  try {\n    const response = await axios.get(`${BACE_URL}?${params}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch data from Pixabay API');\n  }\n}\n\nexport { serviceCardsInfo };\n","function createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `\n  <a class=\"photo-card\" href=\"${largeImageURL}\" alt=\"${tags}\"><img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes</b><span class=\"value\">${likes}</span>\n    </p>\n    <p class=\"info-item\">\n      <b>Views</b><span class=\"value\">${views}</span>\n    </p>\n    <p class=\"info-item\">\n      <b>Comments</b><span class=\"value\">${comments}</span>\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads</b><span class=\"value\">${downloads}</span>\n    </p>\n  </div>\n</a>`\n    )\n    .join('');\n}\n\nexport { createMarkup };\n","import { serviceCardsInfo } from '../src/js/pixabay-api';\nimport { createMarkup } from '../src/js/render-functions';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  input: document.querySelector('input'),\n  gallery: document.querySelector('.gallery'),\n  target: document.querySelector('.js-guard'),\n};\n\nlet currentPage = 1;\nconst maxPage = 14;\nlet lightbox;\n\nlet options = {\n  root: null,\n  rootMargin: '200px',\n  threshold: 0,\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nasync function handleSubmit(event) {\n  event.preventDefault();\n  refs.gallery.innerHTML = '';\n  const inputData = refs.input.value.trim().toLowerCase();\n\n  document.querySelector('.loader').style.display = 'block';\n\n  let data;\n\n  try {\n    data = await serviceCardsInfo(inputData, currentPage);\n\n    if (data.hits.length === 0) {\n      iziToast.show({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        messageColor: 'red',\n      });\n      return;\n    }\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n\n  document.querySelector('.loader').style.display = 'none';\n\n  const markup = createMarkup(data.hits);\n  refs.gallery.innerHTML = markup;\n  currentPage += 1;\n  observer.observe(refs.target);\n\n  lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n}\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nfunction onLoad(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      const inputData = refs.input.value.trim().toLowerCase();\n\n      try {\n        const data = await serviceCardsInfo(inputData, currentPage);\n        const markup = createMarkup(data.hits);\n        refs.gallery.insertAdjacentHTML('beforeend', markup);\n        currentPage += 1;\n        lightbox.refresh();\n      } catch (err) {\n        console.log(err);\n      }\n\n      if (!entry.isIntersecting || currentPage >= maxPage) {\n        observer.unobserve(refs.target);\n      }\n    }\n  });\n}\n"],"names":["serviceCardsInfo","data","page","BACE_URL","API_KEY","params","axios","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","refs","currentPage","maxPage","lightbox","options","handleSubmit","event","inputData","iziToast","err","markup","observer","SimpleLightbox","onLoad","entries","entry"],"mappings":"owBAEA,eAAeA,EAAiBC,EAAMC,EAAM,CAC1C,MAAMC,EAAW,2BACXC,EAAU,qCAEVC,EAAS,IAAI,gBAAgB,CACjC,IAAKD,EACL,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,KAAMC,EACN,SAAU,EACd,CAAG,EAED,GAAI,CAEF,OADiB,MAAMI,EAAM,IAAI,GAAGH,CAAQ,IAAIE,CAAM,EAAE,GACxC,IACjB,MAAe,CACd,MAAM,IAAI,MAAM,uCAAuC,CACxD,CACH,CCtBA,SAASE,EAAaC,EAAK,CACzB,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,gCACwBL,CAAa,UAAUC,CAAI,eAAeF,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,wCAG5DC,CAAK;AAAA;AAAA;AAAA,wCAGLC,CAAK;AAAA;AAAA;AAAA,2CAGFC,CAAQ;AAAA;AAAA;AAAA,4CAGPC,CAAS;AAAA;AAAA;AAAA,KAIhD,EACA,KAAK,EAAE,CACZ,CCvBA,MAAMC,EAAO,CACX,KAAM,SAAS,cAAc,cAAc,EAC3C,MAAO,SAAS,cAAc,OAAO,EACrC,QAAS,SAAS,cAAc,UAAU,EAC1C,OAAQ,SAAS,cAAc,WAAW,CAC5C,EAEA,IAAIC,EAAc,EAClB,MAAMC,EAAU,GAChB,IAAIC,EAEAC,EAAU,CACZ,KAAM,KACN,WAAY,QACZ,UAAW,CACb,EAEAJ,EAAK,KAAK,iBAAiB,SAAUK,CAAY,EAEjD,eAAeA,EAAaC,EAAO,CACjCA,EAAM,eAAc,EACpBN,EAAK,QAAQ,UAAY,GACzB,MAAMO,EAAYP,EAAK,MAAM,MAAM,KAAI,EAAG,cAE1C,SAAS,cAAc,SAAS,EAAE,MAAM,QAAU,QAElD,IAAIf,EAEJ,GAAI,CAGF,GAFAA,EAAO,MAAMD,EAAiBuB,EAAWN,CAAW,EAEhDhB,EAAK,KAAK,SAAW,EAAG,CAC1BuB,EAAS,KAAK,CACZ,QACE,2EACF,aAAc,KACtB,CAAO,EACD,MACD,CACF,OAAQC,EAAK,CACZ,QAAQ,IAAIA,CAAG,EACf,MACD,CAED,SAAS,cAAc,SAAS,EAAE,MAAM,QAAU,OAElD,MAAMC,EAASnB,EAAaN,EAAK,IAAI,EACrCe,EAAK,QAAQ,UAAYU,EACzBT,GAAe,EACfU,EAAS,QAAQX,EAAK,MAAM,EAE5BG,EAAW,IAAIS,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,GAClB,CAAG,CACH,CAEA,IAAID,EAAW,IAAI,qBAAqBE,EAAQT,CAAO,EAEvD,SAASS,EAAOC,EAASH,EAAU,CACjCG,EAAQ,QAAQ,MAAMC,GAAS,CAC7B,GAAIA,EAAM,eAAgB,CACxB,MAAMR,EAAYP,EAAK,MAAM,MAAM,KAAI,EAAG,cAE1C,GAAI,CACF,MAAMf,EAAO,MAAMD,EAAiBuB,EAAWN,CAAW,EACpDS,EAASnB,EAAaN,EAAK,IAAI,EACrCe,EAAK,QAAQ,mBAAmB,YAAaU,CAAM,EACnDT,GAAe,EACfE,EAAS,QAAO,CACjB,OAAQM,EAAK,CACZ,QAAQ,IAAIA,CAAG,CAChB,EAEG,CAACM,EAAM,gBAAkBd,GAAeC,IAC1CS,EAAS,UAAUX,EAAK,MAAM,CAEjC,CACL,CAAG,CACH"}